// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`deve renderizar o input text com label 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Text
    id="Nome"
    label="Título"
    placeholder="Placeholder"
    width="100%"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Label
          htmlFor="Nome"
        >
          Título
        </Label>,
        <input
          className="n-entry-text"
          id="Nome"
          placeholder="Placeholder"
        />,
      ],
      "className": "n-entry-root",
      "style": Object {
        "boxSizing": "border-box",
        "width": "100%",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Título",
          "htmlFor": "Nome",
        },
        "ref": null,
        "rendered": "Título",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "n-entry-text",
          "id": "Nome",
          "placeholder": "Placeholder",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Label
            htmlFor="Nome"
          >
            Título
          </Label>,
          <input
            className="n-entry-text"
            id="Nome"
            placeholder="Placeholder"
          />,
        ],
        "className": "n-entry-root",
        "style": Object {
          "boxSizing": "border-box",
          "width": "100%",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Título",
            "htmlFor": "Nome",
          },
          "ref": null,
          "rendered": "Título",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "n-entry-text",
            "id": "Nome",
            "placeholder": "Placeholder",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`deve renderizar o input text com label desabilitado 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Text
    disabled={true}
    id="Nome"
    label="Título"
    placeholder="Placeholder"
    width="100%"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Label
          htmlFor="Nome"
        >
          Título
        </Label>,
        <input
          className="n-entry-text"
          disabled={true}
          id="Nome"
          placeholder="Placeholder"
        />,
      ],
      "className": "n-entry-root",
      "style": Object {
        "boxSizing": "border-box",
        "width": "100%",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Título",
          "htmlFor": "Nome",
        },
        "ref": null,
        "rendered": "Título",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "n-entry-text",
          "disabled": true,
          "id": "Nome",
          "placeholder": "Placeholder",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Label
            htmlFor="Nome"
          >
            Título
          </Label>,
          <input
            className="n-entry-text"
            disabled={true}
            id="Nome"
            placeholder="Placeholder"
          />,
        ],
        "className": "n-entry-root",
        "style": Object {
          "boxSizing": "border-box",
          "width": "100%",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Título",
            "htmlFor": "Nome",
          },
          "ref": null,
          "rendered": "Título",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "n-entry-text",
            "disabled": true,
            "id": "Nome",
            "placeholder": "Placeholder",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`deve renderizar o input text com label e width em % 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Text
    id="Nome"
    label="Título"
    placeholder="Placeholder"
    width="50%"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Label
          htmlFor="Nome"
        >
          Título
        </Label>,
        <input
          className="n-entry-text"
          id="Nome"
          placeholder="Placeholder"
        />,
      ],
      "className": "n-entry-root",
      "style": Object {
        "boxSizing": "border-box",
        "width": "50%",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Título",
          "htmlFor": "Nome",
        },
        "ref": null,
        "rendered": "Título",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "n-entry-text",
          "id": "Nome",
          "placeholder": "Placeholder",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Label
            htmlFor="Nome"
          >
            Título
          </Label>,
          <input
            className="n-entry-text"
            id="Nome"
            placeholder="Placeholder"
          />,
        ],
        "className": "n-entry-root",
        "style": Object {
          "boxSizing": "border-box",
          "width": "50%",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Título",
            "htmlFor": "Nome",
          },
          "ref": null,
          "rendered": "Título",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "n-entry-text",
            "id": "Nome",
            "placeholder": "Placeholder",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`deve renderizar o input text com label e width em px 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Text
    id="Nome"
    label="Título"
    placeholder="Placeholder"
    width="200px"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Label
          htmlFor="Nome"
        >
          Título
        </Label>,
        <input
          className="n-entry-text"
          id="Nome"
          placeholder="Placeholder"
        />,
      ],
      "className": "n-entry-root",
      "style": Object {
        "boxSizing": "border-box",
        "width": "200px",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Título",
          "htmlFor": "Nome",
        },
        "ref": null,
        "rendered": "Título",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "n-entry-text",
          "id": "Nome",
          "placeholder": "Placeholder",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Label
            htmlFor="Nome"
          >
            Título
          </Label>,
          <input
            className="n-entry-text"
            id="Nome"
            placeholder="Placeholder"
          />,
        ],
        "className": "n-entry-root",
        "style": Object {
          "boxSizing": "border-box",
          "width": "200px",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Título",
            "htmlFor": "Nome",
          },
          "ref": null,
          "rendered": "Título",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "n-entry-text",
            "id": "Nome",
            "placeholder": "Placeholder",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`deve renderizar o input text com label e width em rem 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Text
    id="Nome"
    label="Título"
    placeholder="Placeholder"
    width="12rem"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Label
          htmlFor="Nome"
        >
          Título
        </Label>,
        <input
          className="n-entry-text"
          id="Nome"
          placeholder="Placeholder"
        />,
      ],
      "className": "n-entry-root",
      "style": Object {
        "boxSizing": "border-box",
        "width": "12rem",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Título",
          "htmlFor": "Nome",
        },
        "ref": null,
        "rendered": "Título",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "n-entry-text",
          "id": "Nome",
          "placeholder": "Placeholder",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Label
            htmlFor="Nome"
          >
            Título
          </Label>,
          <input
            className="n-entry-text"
            id="Nome"
            placeholder="Placeholder"
          />,
        ],
        "className": "n-entry-root",
        "style": Object {
          "boxSizing": "border-box",
          "width": "12rem",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Título",
            "htmlFor": "Nome",
          },
          "ref": null,
          "rendered": "Título",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "n-entry-text",
            "id": "Nome",
            "placeholder": "Placeholder",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`deve renderizar o input text com label sem texto 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Text
    id="Nome"
    label={true}
    placeholder="Placeholder"
    width="100%"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Label
          htmlFor="Nome"
        >
          true
        </Label>,
        <input
          className="n-entry-text"
          id="Nome"
          placeholder="Placeholder"
        />,
      ],
      "className": "n-entry-root",
      "style": Object {
        "boxSizing": "border-box",
        "width": "100%",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": true,
          "htmlFor": "Nome",
        },
        "ref": null,
        "rendered": true,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "n-entry-text",
          "id": "Nome",
          "placeholder": "Placeholder",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Label
            htmlFor="Nome"
          >
            true
          </Label>,
          <input
            className="n-entry-text"
            id="Nome"
            placeholder="Placeholder"
          />,
        ],
        "className": "n-entry-root",
        "style": Object {
          "boxSizing": "border-box",
          "width": "100%",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": true,
            "htmlFor": "Nome",
          },
          "ref": null,
          "rendered": true,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "n-entry-text",
            "id": "Nome",
            "placeholder": "Placeholder",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`deve renderizar o input text com label sem texto desabilitado 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Text
    disabled={true}
    id="Nome"
    label={true}
    placeholder="Placeholder"
    width="100%"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Label
          htmlFor="Nome"
        >
          true
        </Label>,
        <input
          className="n-entry-text"
          disabled={true}
          id="Nome"
          placeholder="Placeholder"
        />,
      ],
      "className": "n-entry-root",
      "style": Object {
        "boxSizing": "border-box",
        "width": "100%",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": true,
          "htmlFor": "Nome",
        },
        "ref": null,
        "rendered": true,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "n-entry-text",
          "disabled": true,
          "id": "Nome",
          "placeholder": "Placeholder",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Label
            htmlFor="Nome"
          >
            true
          </Label>,
          <input
            className="n-entry-text"
            disabled={true}
            id="Nome"
            placeholder="Placeholder"
          />,
        ],
        "className": "n-entry-root",
        "style": Object {
          "boxSizing": "border-box",
          "width": "100%",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": true,
            "htmlFor": "Nome",
          },
          "ref": null,
          "rendered": true,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "n-entry-text",
            "disabled": true,
            "id": "Nome",
            "placeholder": "Placeholder",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`deve renderizar o input text sem label 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Text
    id="Nome"
    placeholder="Placeholder"
    width="100%"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <input
        className="n-entry-text"
        id="Nome"
        placeholder="Placeholder"
      />,
      "className": "n-entry-root",
      "style": Object {
        "boxSizing": "border-box",
        "width": "100%",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "className": "n-entry-text",
        "id": "Nome",
        "placeholder": "Placeholder",
      },
      "ref": null,
      "rendered": null,
      "type": "input",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <input
          className="n-entry-text"
          id="Nome"
          placeholder="Placeholder"
        />,
        "className": "n-entry-root",
        "style": Object {
          "boxSizing": "border-box",
          "width": "100%",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "n-entry-text",
          "id": "Nome",
          "placeholder": "Placeholder",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`deve renderizar o input text sem label desabilitado 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Text
    disabled={true}
    id="Nome"
    placeholder="Placeholder"
    width="100%"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <input
        className="n-entry-text"
        disabled={true}
        id="Nome"
        placeholder="Placeholder"
      />,
      "className": "n-entry-root",
      "style": Object {
        "boxSizing": "border-box",
        "width": "100%",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "className": "n-entry-text",
        "disabled": true,
        "id": "Nome",
        "placeholder": "Placeholder",
      },
      "ref": null,
      "rendered": null,
      "type": "input",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <input
          className="n-entry-text"
          disabled={true}
          id="Nome"
          placeholder="Placeholder"
        />,
        "className": "n-entry-root",
        "style": Object {
          "boxSizing": "border-box",
          "width": "100%",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "n-entry-text",
          "disabled": true,
          "id": "Nome",
          "placeholder": "Placeholder",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
